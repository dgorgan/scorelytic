# General behavior
behavior:
  verbose: false                  # Keep responses concise by default
  prefer_code_only: true          # Prioritize code over explanations unless asked
  max_response_tokens: 800        # Limit length to keep responses manageable

# Code style & conventions
style_guidelines:
  naming:
    variables: camelCase
    functions: camelCase
    types: PascalCase
    components: PascalCase
    files: kebab-case
  formatting:
    indent: 2
    quotes: single
    semicolons: true
    trailing_commas: none
  code_patterns:
    prefer_arrow_functions: true
    prefer_const: true
    no_console_logs: true

# React & Frontend specifics
frontend_framework:
  react:
    prefer_function_components: true
    use_hooks: true
    hooks_rules:
      useEffect: "dependencies must be explicit"
      useCallback: "only when necessary"
    styling:
      css_modules: true
      tailwind_css: true
      avoid_inline_styles: true

# Backend specifics (e.g., Express, Supabase)
backend_framework:
  express:
    separate_routes_and_services: true
    no_db_logic_in_server_file: true
  supabase:
    always_use_env_vars: true
    mask_sensitive_env_vars: true
  env_validation: true  # All required env vars must be validated at startup (fail-fast, e.g. with envalid)

# Testing
# Colocate all test files with the nearest service, component, or feature folder.
# Do NOT place test files at the top of a domain folder (e.g. not at the top of services/).
# Example: use services/youtube/__tests__/, not services/__tests__/
testing:
  use_jest: true
  test_file_suffix: ".test.ts"
  coverage_required: true
  # Suggest coverage improvements or updates to test coverage thresholds when coverage is low or new code is added.
  mock_external_calls: true
  require_tests: true
  require_tests_pass: true
  remind_run_tests_in_pr: true
  require_tests_for_new_features: true
  require_tests_for_new_files: true
  require_tests_for_new_services: true
  always_mock_external_apis: true
  never_make_real_api_calls_in_tests: true
  test_setup_files:
    - 'jest.setup.server.js'
    - 'jest.setup.client.js'
  allowed_test_file_suffixes:
    - '.test.ts'
    - '.test.tsx'
    - '.test.jsx'
  require_js_for_jest_setup: true  # All Jest setup files must be .js for ESM compatibility
  no_dom_polyfills_in_server_setup: true  # DOM/browser polyfills only in client setup

  clientTests:
    match: ['client/**/*.test.tsx', 'client/**/*.test.jsx']
    jsxSupport: true
    typeSafety: optional
    transformer: ts-jest
    allowImplicitAny: false
    typeHints:
      preferred: 'React.ReactNode'
      allowFallbackToAny: true

  serverTests:
    match: ['server/**/*.test.ts', 'shared/**/*.test.ts', '**/__tests__/**/*.test.ts']
    fileExtensions: ['.ts', '.tsx']
    typeSafety: required
    transformer: ts-jest

  rules:
    preventTestRemoval: true
    allowTypeAnnotationsInMocks: true
    preventAutoEslintDisables: true
    preferExplicitTypes: true
    suggestReactNodeForChildren: true

# Documentation & Comments
docs:
  always_document_public_functions: true
  prefer_jsdoc_style: true
  no_todos_in_commits: true
  # Commit messages should be conventional, concise, and summarize intent—not full diffs or file-by-file changes.
  # Example: "fix(server): handle Sentry error edge case" or "chore(shared): enforce alias imports"
  # Enforcement: Use commitlint + Husky commit-msg hook for actual enforcement.

# Project management references
project_management:
  reference_files:
    - "project_milestones.md"
    - "documentation.md"
    - "api_spec.md"
  follow_milestones_order: true
  pr_checklist:
    - 'All new and existing tests pass'
    - 'Code coverage meets threshold'
    - 'No debug or console.log statements'
    - 'Documentation updated if needed'
    - 'All required env vars are injected in all CI jobs (unit, e2e, etc.)—no reliance on local .env'

# AI interaction preferences
ai_assistant:
  ask_before_big_changes: true
  summarize_changes_in_commit: true
  avoid_suggestions_outside_scope: true
  commit_message_max_length: 100
  commit_message_style: "conventional, concise, and descriptive (no full diffs or file lists)"
  # Enforced by commitlint + Husky commit-msg hook if enabled

# Aliases (optional, if you want to add for your imports)
aliases:
  "@/": "src/"
  
# Aliasing & Internal Imports
aliasing:
  enforce_alias_imports: true
  allowed_aliases:
    - '@/'
  disallow_relative_parent_imports: true
  allow_relative_in_shared_tests: true  # For Jest compatibility in shared/__tests__
  # Enforced by eslint-plugin-import/no-relative-parent-imports
  