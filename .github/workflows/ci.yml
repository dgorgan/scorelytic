name: CI

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop, feature/*]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_RELEASE: ${{ github.sha }}
      NEXT_PUBLIC_SENTRY_RELEASE: ${{ github.sha }}

      # Dummy/test values for CI
      NEXT_PUBLIC_SUPABASE_ANON_KEY: dummy
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
      NEXT_PUBLIC_API_URL: http://localhost:5000
      NEXT_PUBLIC_SENTRY_DSN: dummy
      NEXT_PUBLIC_SENTRY_ENVIRONMENT: ci
      SENTRY_DSN: dummy
      SENTRY_ENVIRONMENT: ci
      SUPABASE_URL: http://localhost:54321
      SUPABASE_SERVICE_ROLE_KEY: dummy
      LOGTAIL_SOURCE_TOKEN: dummy
      OPENAI_API_KEY: dummy
      DISABLE_OPENAI: false
      LLM_PROMPT_STYLE: DEFAULT
      PORT: 5000
      YOUTUBE_API_KEY: dummy

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install

      - name: Install client dependencies
        run: cd client && npm install

      - name: Install server dependencies
        run: cd server && npm install

      - name: Write env files for client and server
        run: echo '${{ toJson(env) }}' | bash ./scripts/write-envs.sh

      - name: Build client
        run: cd client && npm run build

      - name: Build server
        run: cd server && npm run build

      # Optional: Commented out unless you want Sentry uploads in CI
      # - name: Upload client sourcemaps to Sentry
      #   if: ${{ env.SENTRY_AUTH_TOKEN != 'dummy' }}
      #   run: |
      #     cd client
      #     npx sentry-cli sourcemaps upload \
      #       --org "$SENTRY_ORG" \
      #       --project "$SENTRY_PROJECT" \
      #       --release "$SENTRY_RELEASE" \
      #       .next

      # - name: Upload server sourcemaps to Sentry
      #   if: ${{ env.SENTRY_AUTH_TOKEN != 'dummy' }}
      #   run: |
      #     cd server
      #     npx sentry-cli sourcemaps upload \
      #       --org "$SENTRY_ORG" \
      #       --project "$SENTRY_PROJECT" \
      #       --release "$SENTRY_RELEASE" \
      #       dist

      - name: Type check
        run: npm run check:types

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Check for accidental JS artifacts in src
        run: |
          if find server/src client/services client/test -type f \( -name '*.js' -o -name '*.js.map' -o -name '*.d.ts' \) ! -path '*/dist-server/*' ! -path '*/.next/*' | grep .; then
            echo '‚ùå JS artifacts found in source! Clean up before merging.'
            exit 1
          fi
