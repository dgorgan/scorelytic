name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'

env:
  # Server secrets from GitHub secrets
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  LOGTAIL_SOURCE_TOKEN: ${{ secrets.LOGTAIL_SOURCE_TOKEN }}

  # Server non-secret environment vars
  PORT: 5000
  DISABLE_OPENAI: false
  LLM_PROMPT_STYLE: DEFAULT

  # Client secrets
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}

  # Client non-secret environment vars
  NEXT_PUBLIC_API_URL: http://localhost:5000
  NEXT_PUBLIC_SENTRY_ENVIRONMENT: ci
  NEXT_PUBLIC_SENTRY_RELEASE: ci

  # Shared or other keys
  YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache pnpm store for faster installs
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install pnpm package manager globally
        run: npm i -g pnpm
      - name: Install all dependencies using pnpm (frozen lockfile for consistency)
        run: pnpm install --frozen-lockfile

  turbo-pipeline:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run turbo pipeline (build, lint, type-check, test)
        run: pnpm turbo run build lint type-check test --cache-dir=.turbo

  e2e:
    needs: turbo-pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install system dependencies (ffmpeg, jq)
        run: sudo apt-get update && sudo apt-get install -y ffmpeg jq
      - name: Run Playwright E2E tests
        run: pnpm test:e2e
