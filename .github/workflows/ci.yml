name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  workflow_dispatch:

env:
  # Environment variables for your jobs
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LOGTAIL_SOURCE_TOKEN: ${{ secrets.LOGTAIL_SOURCE_TOKEN }}
  YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
  SENTRY_DSN_CLIENT: ${{ secrets.SENTRY_DSN_CLIENT }}
  SENTRY_DSN_SERVER: ${{ secrets.SENTRY_DSN_SERVER }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  SENTRY_PROJECT_CLIENT: ${{ vars.SENTRY_PROJECT_CLIENT }}
  SENTRY_PROJECT_SERVER: ${{ vars.SENTRY_PROJECT_SERVER }}
  SENTRY_ENVIRONMENT: ${{ vars.SENTRY_ENVIRONMENT }}
  SENTRY_ORG: ${{ vars.SENTRY_ORG }}
  SUPABASE_URL: ${{ vars.SUPABASE_URL }}
  PORT: 5000
  DISABLE_OPENAI: false
  LLM_PROMPT_STYLE: ${{ vars.LLM_PROMPT_STYLE }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Cache turbo, next, dist
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            client/.next
            server/dist
            shared/dist
          key: ${{ runner.os }}-build-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
      - name: Print all env vars (masking secrets)
        run: env | sort | sed 's/\(SUPABASE\|SERVICE_ROLE\|KEY\|TOKEN\|SECRET\|DSN\|PASSWORD\|PRIVATE\|ANON\)=.*/\1=***MASKED***/g'

  build-and-check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore turbo, next, dist cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            client/.next
            server/dist
            shared/dist
          key: ${{ runner.os }}-build-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build, lint, type-check
        run: pnpm turbo run build lint type-check --concurrency=2 --cache-dir=.turbo
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            client/.next
            server/dist
            shared/dist

  unit-tests:
    needs: build-and-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run unit tests
        run: pnpm turbo run test --concurrency=2 --cache-dir=.turbo
      - name: Upload coverage on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  e2e:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install system dependencies (ffmpeg, jq)
        run: sudo apt-get update && sudo apt-get install -y ffmpeg jq
      - name: Run Playwright E2E tests
        run: pnpm test:e2e
      - name: Upload Playwright traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: client/test-results
