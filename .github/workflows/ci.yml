name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  workflow_dispatch:

env:
  # Environment variables for your jobs
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  LOGTAIL_SOURCE_TOKEN: ${{ secrets.LOGTAIL_SOURCE_TOKEN }}
  YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
  SENTRY_DSN_CLIENT: ${{ secrets.SENTRY_DSN_CLIENT }}
  SENTRY_DSN_SERVER: ${{ secrets.SENTRY_DSN_SERVER }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

  # Sentry and client/server-related secrets/vars
  NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  SENTRY_PROJECT_CLIENT: ${{ vars.SENTRY_PROJECT_CLIENT }}
  SENTRY_PROJECT_SERVER: ${{ vars.SENTRY_PROJECT_SERVER }}
  SENTRY_ENVIRONMENT: ${{ vars.SENTRY_ENVIRONMENT }}
  SENTRY_ORG: ${{ vars.SENTRY_ORG }}
  SUPABASE_URL: ${{ vars.SUPABASE_URL }}

  # Additional non-secret environment vars
  PORT: 5000
  DISABLE_OPENAI: false
  LLM_PROMPT_STYLE: ${{ vars.LLM_PROMPT_STYLE }}

jobs:
  # Setup job to install pnpm and cache dependencies
  setup:
    environment: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  # Turbo pipeline job with reduced concurrency
  turbo-pipeline:
    needs: setup
    environment: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run turbo pipeline (with reduced concurrency and timeout)
        run: timeout 10m pnpm turbo run build lint type-check test --concurrency=2 --cache-dir=.turbo
      - name: List running processes after turbo run
        run: ps aux

  # E2E tests job
  e2e:
    needs: turbo-pipeline
    environment: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Install pnpm globally
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install system dependencies (ffmpeg, jq)
        run: sudo apt-get update && sudo apt-get install -y ffmpeg jq
      - name: Run Playwright E2E tests
        run: pnpm test:e2e
